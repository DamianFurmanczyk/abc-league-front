{"version":3,"file":"stripe-angular.js","sources":["ng:/stripe-angular/StripeTypes.ts","ng:/stripe-angular/StripeScriptTag.ts","ng:/stripe-angular/components/StripeComponent.ts","ng:/stripe-angular/components/StripeSource.component.ts","ng:/stripe-angular/components/StripeCard.component.ts","ng:/stripe-angular/components/StripeBank.component.ts","ng:/stripe-angular/index.ts","ng:/stripe-angular/stripe-angular.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const STRIPE_PUBLISHABLE_KEY = new InjectionToken<string>('Stripe Publishable Key')\nexport const STRIPE_OPTIONS = new InjectionToken<StripeInstanceOptions>('Stripe Options')\n\nexport interface Stripe{\n  (string:string,options?:StripeInstanceOptions):StripeInstance\n}\n\nexport interface StripeInstance{\n  elements       : (options?:any)=>any\n  createToken    : (elements:any, options?:StripeInstanceOptions)=>any\n  createSource   : (elements:any, options?:StripeInstanceOptions)=>any\n  retrieveSource : ()=>any\n  paymentRequest : ()=>any\n}\n\nexport interface StripeInstanceOptions{\n  stripeAccount ?: string;\n}\n\nexport interface StripeCard{\n  id                  : string\n  object              : \"card\"|string\n  name                : string\n  address_city        : string\n  address_country     : string\n  address_line1       : string\n  address_line1_check : string\n  address_line2       : string\n  address_state       : string\n  address_zip         : string\n  address_zip_check   : string\n  brand               : string\n  country             : string\n  cvc_check           : string\n  dynamic_last4       : string\n  exp_month           : number\n  exp_year            : number\n  funding             : string\n  last4               : string\n  metadata            : any\n  tokenization_method : any\n}\n\nexport interface StripeToken{\n  id        : string\n  object    : string\n  card      : StripeCard\n  client_ip : string\n  created   : number\n  livemode  : boolean\n  type      : \"card\"|string\n  used      : boolean\n}\n\nexport interface StripeSource {\n  id        : string\n  object    : string\n  card      : StripeCard\n  client_ip : string\n  created   : number\n  livemode  : boolean\n  status    : string\n  type      : \"card\" | string\n  usage     : string\n}\n\nexport interface StripeStyle{\n  color          : string\n  fontFamily     : string\n  fontSize       : string\n  fontSmoothing  : string\n  fontStyle      : string\n  fontVariant    : string\n  iconColor      : string\n  lineHeight     : string\n  letterSpacing  : string\n  textAlign      : string\n  textDecoration : string\n  textShadow     : string\n  textTransform  : string\n}\n\nexport interface StripeStyling{\n  base     : StripeStyle\n  complete : StripeStyle\n  empty    : StripeStyle\n  invalid  : StripeStyle\n}\n\nexport interface StripeClasses{\n  base     : string\n  complete : string\n  empty    : string\n  focus    : string\n  invalid  : string\n  webkitAutofill:string\n}\n\nexport interface StripeCardOptions{\n  classes        : StripeClasses\n  hidePostalCode : boolean\n  hideIcon       : boolean\n  iconStyle      : string\n  placeholder    : string\n  style          : StripeStyling\n}","import { Injectable, Inject } from \"@angular/core\"\n\nimport {\n  Stripe, StripeInstance, StripeInstanceOptions, STRIPE_PUBLISHABLE_KEY, STRIPE_OPTIONS\n  //, StripeCard, StripeToken\n} from \"./StripeTypes\"\n\n@Injectable({providedIn: 'root'}) export class StripeScriptTag{\n  src:string = \"https://js.stripe.com/v3/\"\n  Stripe!:Stripe//set at runtime\n  StripeInstance!:StripeInstance\n  load:Promise<any>\n\n  constructor(\n    @Inject(STRIPE_PUBLISHABLE_KEY) key?: string,\n    @Inject(STRIPE_OPTIONS) options?: StripeInstanceOptions\n  ){\n    this.load = this.injectIntoHead()\n    if (key) this.setPublishableKey(key, options)\n  }\n\n  promiseStripe():Promise<Stripe>{\n    return this.load\n  }\n\n  promiseInstance():Promise<StripeInstance>{\n    return this.promiseStripe()\n    .then(stripe=>{\n      if( !this.StripeInstance ){\n        const err = new Error(\"Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()\")\n        err[\"code\"] = \"STRIPEKEYNOTSET\"\n        throw err\n        //return Promise.reject( err )\n      }\n\n      return this.StripeInstance\n    })\n  }\n\n  setPublishableKey(\n    key:string,\n    options?:StripeInstanceOptions\n  ):Promise<StripeInstance>{\n    return this.load.then( ()=>\n      this.StripeInstance=this.Stripe(key, options)\n    )\n  }\n\n  injectIntoHead():Promise<Stripe>{\n    if( window[\"Stripe\"] ){\n      return Promise.resolve( this.Stripe=window[\"Stripe\"] )\n    }\n\n    return new Promise((res,rej)=>{\n      const head = this.getTargetTagDropElement()\n      const script = document.createElement(\"script\")\n      script.setAttribute(\"src\", this.src)\n      script.setAttribute(\"type\", \"text/javascript\")\n\n      script.addEventListener(\"load\",()=>{\n        this.Stripe = this.grabStripe()\n        res( this.Stripe )\n      })\n\n      head.appendChild(script)\n    })\n  }\n\n  grabStripe(){\n    return window[\"Stripe\"]\n  }\n\n  getTargetTagDropElement(){\n    let elm = document.getElementsByTagName(\"head\")\n\n    if(elm.length)return elm[0]\n\n    return document.getElementsByTagName(\"body\")[0]\n  }\n}\n","import {\n  Input, Output, EventEmitter\n} from \"@angular/core\"\nimport {\n  StripeInstance\n} from \"../StripeTypes\"\nimport { StripeScriptTag } from \"../StripeScriptTag\"\n\nexport class StripeComponent{\n  @Output(\"catch\") catcher:EventEmitter<Error> = new EventEmitter()\n\n  @Input() invalid!:Error\n  @Output() invalidChange:EventEmitter<Error> = new EventEmitter()\n\n  stripe!:StripeInstance\n\n  constructor(\n    public StripeScriptTag:StripeScriptTag\n  ){}\n\n  ngOnInit(){\n    this.init()\n  }\n\n  init():Promise<StripeInstance>{\n    return this.StripeScriptTag.promiseInstance()\n    .then( i=>this.stripe=i )\n  }\n}","import {\n  Input, Output, EventEmitter, Component\n} from \"@angular/core\"\nimport {\n  StripeToken, StripeSource as StripeSourceType\n} from \"../StripeTypes\"\nimport { StripeScriptTag } from \"../StripeScriptTag\"\nimport { StripeComponent } from \"./StripeComponent\"\n\n@Component({\n  selector: \"stripe-source\",\n  template: `\n      <ng-container *ngIf=\"!StripeScriptTag.StripeInstance\">\n          <div style=\"color:red;\">Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()</div>\n      </ng-container>\n  `,\n  exportAs:\"StripeSource\"\n}) export class StripeSource extends StripeComponent{\n\n  @Input() source!:StripeSourceType\n  @Output() sourceChange:EventEmitter<StripeSourceType> = new EventEmitter()\n\n  elements:any\n\n  constructor(\n    public StripeScriptTag:StripeScriptTag\n  ){\n    super(StripeScriptTag)\n  }\n\n  createSource():Promise<StripeToken>{\n    delete this.invalid\n    this.invalidChange.emit(this.invalid)\n\n    return this.stripe.createSource(\n      this.elements\n    )\n    .then((result:any)=>{\n      if(result.error){\n        if( result.error.type==\"validation_error\" ){\n          this.invalidChange.emit( this.invalid=result.error )\n        }else{\n          this.catcher.emit(result.error)\n          throw result.error\n        }\n      }else{\n        this.sourceChange.emit(this.source=result.source)\n        return result.source\n      }\n    })\n  }\n}\n","import {\n  ElementRef, Input, Output, EventEmitter, Component } from \"@angular/core\"\nimport {\n  StripeToken, StripeCardOptions } from \"../StripeTypes\"\nimport { StripeScriptTag } from \"../StripeScriptTag\"\nimport { StripeSource } from \"./StripeSource.component\"\n\n@Component({\n  selector: \"stripe-card\",\n  template: `\n      <ng-container *ngIf=\"!StripeScriptTag.StripeInstance\">\n          <div style=\"color:red;\">Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()</div>\n      </ng-container>\n  `,\n  exportAs:\"StripeCard\"\n}) export class StripeCard extends StripeSource{\n  @Input() options!:StripeCardOptions\n\n  @Input() token!:StripeToken\n  @Output() tokenChange:EventEmitter<StripeToken> = new EventEmitter()\n\n  @Output() cardMounted:EventEmitter<any> = new EventEmitter()\n\n  constructor(\n    public ElementRef:ElementRef,\n    public StripeScriptTag:StripeScriptTag\n  ){\n    super(StripeScriptTag)\n  }\n\n  ngOnInit(){\n    super.init()\n    .then(()=>{\n      this.elements = this.stripe.elements().create('card', this.options)\n      this.elements.mount(this.ElementRef.nativeElement)\n      \n      this.cardMounted.emit(this.elements);\n\n      this.elements.addEventListener('change', (result:any)=>{\n        if( result.error ){\n          this.invalidChange.emit( this.invalid=result.error )\n        }\n      })\n    })\n  }\n\n  createToken(\n    extraData?:any\n  ):Promise<StripeToken>{\n    delete this.invalid\n    this.invalidChange.emit(this.invalid)\n\n    return this.stripe.createToken(this.elements, extraData)\n    .then((result:any)=>{\n      if(result.error){\n        if( result.error.type==\"validation_error\" ){\n          this.invalidChange.emit( this.invalid=result.error )\n        }else{\n          this.catcher.emit(result.error)\n          throw result.error\n        }\n      }else{\n        this.tokenChange.emit(this.token=result.token)\n        return result.token\n      }\n    })\n  }\n}\n","import {\n  Input, Output, EventEmitter, Component\n} from \"@angular/core\"\nimport { StripeCardOptions } from \"../StripeTypes\"\nimport { StripeComponent } from \"./StripeComponent\"\nimport { StripeToken } from \"../StripeTypes\"\nimport { StripeScriptTag } from \"../StripeScriptTag\"\n\nexport interface bank_account{\n  country             : string\n  currency            : string\n  routing_number      : string\n  account_number      : string\n  account_holder_name : string\n  account_holder_type : string\n}\n\n@Component({\n  selector: \"stripe-bank\",\n  template: `\n      <ng-container *ngIf=\"!StripeScriptTag.StripeInstance\">\n          <div style=\"color:red;\">Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()</div>\n      </ng-container>\n  `,\n  exportAs:\"StripeBank\"\n}) export class StripeBank extends StripeComponent{\n  @Input() options!:StripeCardOptions//very similar type to card options\n\n  @Input() token!:StripeToken\n  @Output() tokenChange:EventEmitter<StripeToken> = new EventEmitter()\n\n  constructor(\n    public StripeScriptTag:StripeScriptTag\n  ){\n    super(StripeScriptTag)\n  }\n\n  createToken( data?:any ):Promise<StripeToken>{\n    delete this.invalid\n    this.invalidChange.emit(this.invalid)\n\n    return this.stripe.createToken('bank_account', data)\n    .then((result:any)=>{\n      if(result.error){\n        if( result.error.type==\"validation_error\" ){\n          this.invalidChange.emit( this.invalid=result.error )\n        }else{\n          this.catcher.emit(result.error)\n          throw result.error\n        }\n      }else{\n        this.tokenChange.emit(this.token=result.token)\n        return result.token\n      }\n    })\n  }\n}\n","export * from \"./StripeTypes\"\n\nimport { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { StripeInstanceOptions, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY } from './StripeTypes'\n\nimport { StripeScriptTag } from \"./StripeScriptTag\"\nexport { StripeScriptTag } from \"./StripeScriptTag\"\n\nimport { StripeSource } from \"./components/StripeSource.component\"\nexport { StripeSource } from \"./components/StripeSource.component\"\n\nimport { StripeCard } from \"./components/StripeCard.component\"\nexport { StripeCard } from \"./components/StripeCard.component\"\n\nimport { StripeBank } from \"./components/StripeBank.component\"\nexport { bank_account, StripeBank } from \"./components/StripeBank.component\"\n\nconst declarations = [\n  StripeSource,\n  StripeCard,\n  StripeBank\n]\n\n@NgModule({\n  imports:[\n    CommonModule\n  ],\n  declarations: declarations,\n // providers: [ StripeScriptTag ],\n  exports:[ ...declarations ]\n}) export class StripeModule {\n  static forRoot(publishableKey?: string, options?: StripeInstanceOptions): ModuleWithProviders {\n    return {\n      ngModule: StripeModule,\n      providers: [\n        StripeScriptTag,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ],\n    }\n  }\n}\n\n/**\n * @deprecated Please import `StripeModule` directly\n */\nexport const Module = StripeModule\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {StripeComponent as ɵa} from './components/StripeComponent';"]}